{
  "openapi": "3.0.0",
  "info": {
    "title": "Inscription Scolaire API",
    "description": "API for managing school enrollments, programs, and user accounts",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api/v1",
      "description": "Main API server"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "Register a new user",
        "description": "Creates a new user account and sends activation email",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Authenticate user",
        "description": "Logs in a user and returns authentication token",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/activate-account": {
      "get": {
        "summary": "Activate user account",
        "description": "Activates a user account using activation token",
        "tags": ["Authentication"],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account activated successfully"
          },
          "400": {
            "description": "Invalid or expired token"
          }
        }
      }
    },
    "/programs": {
      "get": {
        "summary": "Get all programs",
        "description": "Retrieves all available programs",
        "tags": ["Programs"],
        "responses": {
          "200": {
            "description": "List of programs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramResponseDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create program",
        "description": "Creates a new program (Admin only)",
        "tags": ["Programs"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgramRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Program created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/programs/{id}": {
      "get": {
        "summary": "Get program by ID",
        "description": "Retrieves a specific program by ID",
        "tags": ["Programs"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Program details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Program not found"
          }
        }
      },
      "put": {
        "summary": "Update program",
        "description": "Updates a program (Admin only)",
        "tags": ["Programs"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgramRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Program updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Program not found"
          }
        }
      },
      "delete": {
        "summary": "Delete program",
        "description": "Deletes a program (Admin only)",
        "tags": ["Programs"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Program deleted successfully"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Program not found"
          }
        }
      }
    },
    "/enrollments": {
      "post": {
        "summary": "Submit enrollment",
        "description": "Submits or updates enrollment form data and documents",
        "tags": ["Enrollments"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "enrollmentDtoRequest": {
                    "type": "string"
                  },
                  "documents": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Enrollment created or updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollmentDtoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/enrollments/my-enrollments": {
      "get": {
        "summary": "Get user's enrollments",
        "description": "Retrieves all enrollments for the authenticated user",
        "tags": ["Enrollments"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of user's enrollments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnrollmentDtoResponse"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["firstname", "lastname", "email", "password"]
      },
      "AuthenticationRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "ProgramRequestDTO": {
        "type": "object",
        "properties": {
          "programCode": {
            "type": "string"
          },
          "programName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "registrationStartDate": {
            "type": "string",
            "format": "date"
          },
          "registrationEndDate": {
            "type": "string",
            "format": "date"
          },
          "capacity": {
            "type": "integer"
          }
        }
      },
      "ProgramResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "programCode": {
            "type": "string"
          },
          "programName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "registrationStartDate": {
            "type": "string",
            "format": "date"
          },
          "registrationEndDate": {
            "type": "string",
            "format": "date"
          },
          "capacity": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": ["ENABLED", "DISABLED"]
          },
          "enrollmentOpen": {
            "type": "boolean"
          }
        }
      },
      "EnrollmentDtoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "description": "Enrollment status",
            "enum": [
              "DRAFT",
              "SUBMITTED",
              "PENDING_PAYMENT",
              "PENDING_VALIDATION",
              "APPROVED",
              "REJECTED",
              "CANCELLED"
            ]
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "submissionDate": {
            "type": "string",
            "format": "date-time"
          },
          "validationDate": {
            "type": "string",
            "format": "date-time"
          },
          "currentStep": {
            "type": "integer"
          },
          "programId": {
            "type": "integer"
          },
          "studentId": {
            "type": "integer"
          },
          "programName": {
            "type": "string"
          },
          "rejectionReason": {
            "type": "string",
            "description": "Reason for rejection if status is REJECTED"
          },
          "personalInfo": {
            "$ref": "#/components/schemas/PersonalInfoDto"
          },
          "academicInfo": {
            "$ref": "#/components/schemas/AcademicInfoDto"
          },
          "contactDetails": {
            "$ref": "#/components/schemas/ContactDetailsDto"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentDto"
            }
          },
          "paymentType": {
            "type": "string",
            "enum": [
              "REGISTRATION_FEE",
              "PROGRAM_PAYMENT"
            ],
            "description": "Type of payment required for this enrollment"
          }
        }
      },
      "PersonalInfoDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "AcademicInfoDto": {
        "type": "object",
        "properties": {
          "lastInstitution": {
            "type": "string"
          },
          "specialization": {
            "type": "string"
          },
          "availableForInternship": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "diplomaObtained": {
            "type": "boolean"
          }
        }
      },
      "ContactDetailsDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "emergencyContacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmergencyContactDto"
            }
          }
        }
      },
      "EmergencyContactDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "relationship": {
            "type": "string"
          }
        }
      },
      "DocumentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "uploadDate": {
            "type": "string",
            "format": "date-time"
          },
          "validationStatus": {
            "type": "string"
          },
          "rejectionReason": {
            "type": "string"
          }
        }
      },
      "PaymentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "amount": {
            "type": "integer",
            "description": "Amount in cents"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "SUCCESSFUL", "FAILED"]
          },
          "sessionId": {
            "type": "string"
          },
          "paymentType": {
            "type": "string",
            "enum": ["REGISTRATION_FEE", "PROGRAM_PAYMENT"],
            "description": "REGISTRATION_FEE: Initial application fee; PROGRAM_PAYMENT: Fee for approved program enrollment"
          },
          "enrollmentId": {
            "type": "integer"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}